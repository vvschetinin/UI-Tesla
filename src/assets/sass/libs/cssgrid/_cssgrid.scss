$grid-breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
  ) !default;

$grid-columns: 12 !default;

.container {
  width: 100%;
  padding: 0;
  margin-right: auto;
  margin-left: auto;
  @include minMedia(576) {
    max-width: 540px;
  }
  @include minMedia(768) {
    max-width: 720px;
  }
  @include minMedia(992) {
    max-width: 960px;
  }
  @include minMedia(1200) {
    max-width: 1140px;
  }
  @include minMedia(1400) {
    max-width: 1320px;
  }
}

.row {
  display: grid;
  padding: 0 15px;
  &-flex{
    display: flex;
    flex-wrap: wrap;
    padding: 0;
  }
}

.row > * {
  box-sizing: border-box;
  width: 100%;
  max-width: 100%;
  min-height: 1px;
  position: relative;
  padding: 0;
}

.row-flex > * {
  box-sizing: border-box;
  width: 100%;
  max-width: 100%;
  min-height: 1px;
  position: relative;
  padding: 0 15px;
}

.grid{
  display: grid;
}

$styles: (
  ".col-2": (width: calc((100% / 12)*2)),
  ".col-3": (width: calc((100% / 12)*3)),
  ".col-4": (width: calc((100% / 12)*4)),
  ".col-6": (width: 50%),
  ".col-8": (width: calc((100% / 12)*8)),
  ".col-10": (width: calc((100% / 12)*10)),
  ".col-12": (width: 100%)
);

@include generate_styles($styles);

@each $bp,
$val in $grid-breakpoints {
  @if $bp !="xs" {
    .col-2--#{$bp} {
      @include minMedia($val) {
        width: calc((100% / 12)*2);
      }
    }
    .col-3--#{$bp} {
      @include minMedia($val) {
        width: calc((100% / 12)*3);
      }
    }
    .col-4--#{$bp} {
      @include minMedia($val) {
        width: calc((100% / 12)*4);
      }
    }
    .col-6--#{$bp} {
      @include minMedia($val) {
        width: calc((100% / 12)*6);
      }
    }
    .col-8--#{$bp} {
      @include minMedia($val) {
        width: calc((100% / 12)*8);
      }
    }
    .col-10--#{$bp} {
      @include minMedia($val) {
        width: calc((100% / 12)*10);
      }
    }
    .col-12--#{$bp} {
      @include minMedia($val) {
        width: 100%;
      }
    }
  }
}
